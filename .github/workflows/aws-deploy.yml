name: Deploy to AWS EC2

on:
  push:
    branches: [ aws ]
  pull_request:
    branches: [ aws ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: flask-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        envs: ECR_REGISTRY,IMAGE_TAG
        script: |
          # Create deployment directory if it doesn't exist
          mkdir -p ~/flask-app-deployment
          cd ~/flask-app-deployment

          # Create docker-compose.prod.yml file
          cat > docker-compose.prod.yml << EOL
          version: '3.8'

          services:
            web:
              image: ${ECR_REGISTRY}/flask-app:${IMAGE_TAG}
              ports:
                - "5000:5000"
              environment:
                - FLASK_ENV=production
                - MONGO_HOST=${MONGO_HOST:-localhost}
                - MONGO_USER=${MONGO_USER:-}
                - MONGO_PASS=${MONGO_PASS:-}
                - MONGO_DB=${MONGO_DB:-flask_app}
              restart: always
          EOL

          # Set environment variables for docker-compose
          export MONGO_HOST="${{ secrets.MONGO_HOST }}"
          export MONGO_USER="${{ secrets.MONGO_USER }}"
          export MONGO_PASS="${{ secrets.MONGO_PASS }}"
          export MONGO_DB="${{ secrets.MONGO_DB }}"

          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${ECR_REGISTRY}

          # Deploy using docker-compose
          docker-compose -f docker-compose.prod.yml down || true
          docker-compose -f docker-compose.prod.yml up -d

          # Print container status
          docker ps
          echo "Deployment completed"